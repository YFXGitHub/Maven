<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  <display-name>LayuiSSM</display-name>
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  
	
	<!-- Spring配置文件 -->
	<!-- 配置Spring配置文件的名称和路径 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<!-- 配置Spring配置文件的完整路径 -->
		<param-value>classpath:com/yfx/config/Spring.xml</param-value>
	</context-param>
	<!-- 配置ContextLoaderListener监听器 -->
	<!-- 当 web项目启动的时候，会把 Spring IOC 容器获取到，并放入 application 域中 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
  
  
  <!-- SpringMVC配置文件 -->
	<!-- 配置SpringMVC的拦截器DispatcherServlet类,用以拦截所有的URL请求 -->
	<servlet>
		<servlet-name>springMVC</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 若不配置<contextConfigureLocation>节点,则SpringMVC配置文件的命名规则必须满足 文件名-servlet.xml,比如你的配置文件名为:SpringMVC,那完整的文件名必须为:SpringMVC-servlet.xml 
			否则将无法扫描到对应的配置文件! -->
		<init-param>
			<!-- <contextConfigureLocation>节点配置的是SpringMVC配置文件的位置 -->
			<param-name>contextConfigLocation</param-name>
			<!-- "classpath:" 路径对应的是工程目录下的src文件 -->
			<!-- 我的SpringMVC文件放在com.config包下,所以对应的路径即为: classpath:com/config/SpringMVC/springMVC-servlet.xml -->
			<param-value>classpath:com/yfx/config/springMVC-servlet.xml</param-value>
		</init-param>
		<!-- 这个配置是使DispatchServlet拦截器随着Web服务启动的时候启动,而不是当客户端发送请求时才启动 -->
		<load-on-startup>1</load-on-startup>
		
		<!--    StandardServletMultipartResolvershu属性配置  -->
		
	</servlet>
	<!-- 配置<servlet-mapping>节点 -->
	<servlet-mapping>
		<!-- 注意:这里的<servlet-name>节点的值需要与<servlet>节点的值保持一致 -->
		<servlet-name>springMVC</servlet-name>
		<!-- 配置想要拦截的url请求格式, "/" 表示拦截所有请求 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
  
  <!-- 解决Form表单 传递来的字符串为乱码状态  , 定义一个过滤器  -->
   <filter>
		 <filter-name>characterEncodingFilter</filter-name>
		 <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		 <init-param>
			 <param-name>encoding</param-name>
			 <param-value>UTF-8</param-value>
		 </init-param>
		 <init-param>
			 <param-name>forceRequestEncoding</param-name>
			 <param-value>true</param-value>
		 </init-param>
	</filter>
	<filter-mapping>
		 <filter-name>characterEncodingFilter</filter-name>
		 <url-pattern>/*</url-pattern>
	</filter-mapping>
	
</web-app>